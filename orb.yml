version: 2.1

description: Delta misspell reports
orbs:
  dscar: naokikimura/dscar@0.1.0
commands:
  execute:
    description: Calculate the difference of misspell results between HEAD branch and BASE branch
    parameters:
      patterns-to-include:
        description: Specify patterns to include by regular expression (Multiple patterns can be specified by separating them with line feed)
        type: string
        default: ".*"
      patterns-to-exclude:
        description: Specify patterns to exclude by regular expression (Multiple patterns can be specified by separating them with line feed)
        type: string
        default: ""
      starting-points:
        description: Specify the path of starting to search for files to analyze (Multiple paths can be specified by separating them with line feed)
        type: string
        default: "."
      ignore:
        description: ignore the following corrections, comma separated
        type: string
        default: ""
      locale:
        description: Correct spellings using locale perferances for US or UK.  Default is to use a neutral variety of English.  Setting locale to US will correct the British spelling of 'colour' to 'color'
        type: enum
        enum: ["US", "UK"]
        default: "US"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    steps:
      - dscar/execute:
          prepare-to-execute:
            - run:
                name: Install misspell
                command: go get -u github.com/client9/misspell/cmd/misspell
          should-find: "true"
          patterns-to-include: << parameters.patterns-to-include >>
          patterns-to-exclude: << parameters.patterns-to-exclude >>
          starting-points: << parameters.starting-points >>
          prepare-to-analyze:
            - run:
                name: export ANALYSIS_ARGUMENTS
                environment:
                  ARG_LOCALE: << parameters.locale >>
                  ARG_IGNORE: << parameters.ignore >>
                command: |
                  set -x
                  cat \<<-EOT >> $BASH_ENV
                  export ANALYSIS_ARGUMENTS=(
                    -locale "$ARG_LOCALE"
                    -i "$ARG_IGNORE"
                    -f '<testsuite id="0" package="misspell" name="{{ .Filename | html }}" timestamp="`date '+%Y-%m-%dT%H:%M:%S'`" hostname="`hostname`" tests="1" failures="1" errors="0" time="0"><properties /><system-out /><system-err /><testcase name="Replace" classname="Replacer" time="0"><failure type="misspelling">{{ .Filename | html }}:{{ .Line | html }}:{{ .Column | html }}: {{ printf "%q" .Original | html }} is a misspelling of {{ printf "%q" .Corrected | html }}</failure></testcase></testsuite>'
                  )
                  EOT
          analysis-name: misspell
          analysis-command: misspell
          analysis-result-header-command: echo
          analysis-result-header-arguments: <testsuites>
          analysis-result-footer-command: echo
          analysis-result-footer-arguments: </testsuites>
          calculate-options: --test-case-key=concat(@classname,"#",@name,"=>",normalize-space())
          test-results-path: << parameters.test-results-path >>
          analysis-exit-code-threshold: 2
          should-save-analysis-results-as-artifacts: true
jobs:
  execute:
    description: Calculate the difference of misspell results between HEAD branch and BASE branch
    parameters:
      patterns-to-include:
        description: Specify patterns to include by regular expression (Multiple patterns can be specified by separating them with line feed)
        type: string
        default: ".*"
      patterns-to-exclude:
        description: Specify patterns to exclude by regular expression (Multiple patterns can be specified by separating them with line feed)
        type: string
        default: ""
      starting-points:
        description: Specify the path of starting to search for files to analyze (Multiple paths can be specified by separating them with line feed)
        type: string
        default: "."
      ignore:
        description: ignore the following corrections, comma separated
        type: string
        default: ""
      locale:
        description: Correct spellings using locale perferances for US or UK.  Default is to use a neutral variety of English.  Setting locale to US will correct the British spelling of 'colour' to 'color'
        type: enum
        enum: ["US", "UK"]
        default: "US"
      test-results-path:
        description: Specify the value of the path parameter in the store_test_results step if you need to change it
        type: string
        default: "/tmp/test-results"
    executor:
      name: dscar/default
      docker-image: circleci/golang
    steps:
      - execute:
          patterns-to-include: << parameters.patterns-to-include >>
          patterns-to-exclude: << parameters.patterns-to-exclude >>
          starting-points: << parameters.starting-points >>
          ignore: << parameters.ignore >>
          locale: << parameters.locale >>
          test-results-path: << parameters.test-results-path >>
